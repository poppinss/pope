function uncurryThis(r){return function(){return Function.call.apply(r,arguments)}}function isObj(r){return null!==r&&"object"==typeof r}function prop(r,n){if(!isObj(r)||"string"!=typeof n)return r;for(var e=n.split("."),o=0;o<e.length;o++){var t=e[o];if(null===(r=hasOwnProperty(r,t)?r[t]:null))break}return r}function pope(r,n,e){e=e||{skipUndefined:!1,throwOnUndefined:!1};for(var o,t=/{{2}(.+?)}{2}/g,i=r;null!==(o=t.exec(r));){var p=o[1].trim();if(p){var u=prop(n,p);if(void 0!==u&&null!==u)i=i.replace(o[0],u);else{if(e.throwOnUndefined){var f=new Error("Missing value for "+o[0]);throw f.key=p,f.code="E_MISSING_KEY",f}e.skipUndefined||(i=i.replace(o[0],""))}}}return i}const hasOwnProperty=uncurryThis(Object.prototype.hasOwnProperty);export{pope,prop};
